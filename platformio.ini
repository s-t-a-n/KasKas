; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = nucleo_f429zi, nucleo_f429zi-debug

[env]
monitor_speed = 115200
build_flags =
;    -std=c++17
    -std=gnu++17
;    -std=gnu++2a
build_src_flags =
    -Wreturn-local-addr
    -Wno-format
    -Wno-sign-compare
    -Wno-parentheses
    -Wno-unused-variable
    -Wno-unused-but-set-variable
    -u_printf_float
    -u_scanf_float
    -DPIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
    -DFAKEIT_ASSERT_ON_UNEXPECTED_METHOD_INVOCATION
    -DMAGIC_ENUM_NO_ASSERT
build_unflags =
    -std=c++11
    -std=gnu++11
    -std=c++14
    -std=gnu++14
;    -std=gnu++17
debug_build_flags =
    -std=c++17
    -std=gnu++17
    -I include
    -D DEBUG_KASKAS
    -D DEBUG_SPINE
    -g3
    -ggdb3
    -Og
    -D_GLIBCXX_DEBUG
    -D_GLIBCXX_ASSERTIONS
lib_ldf_mode = deep
check_tool = clangtidy
check_flags =
    clangtidy: -extra-arg=-std=c++17 -fix --config-file=.clang-tidy
lib_deps =
;   symlink:///home/stan/projects/Spine ; for local development
    https://github.com/s-t-a-n/Spine.git#develop ; for using the development branch of Spine
;    https://github.com/s-t-a-n/Spine.git@^0.0.1 ; for using the tagged release of Spine
    https://github.com/Neargye/magic_enum.git

[deployment]
build_flags =
    ${env.build_flags}
    -O3

[arduino]
lib_deps =
    ${env.lib_deps}
    Wire
    OneWire
    https://github.com/s-t-a-n/DS3231-RTC.git
    https://github.com/milesburton/Arduino-Temperature-Control-Library.git@^3.9.1
    https://github.com/RobTillaart/SHT31.git@^0.5.0

[embedded]
build_flags =
    ${env.build_flags}
    -D EMBEDDED

[env:nucleo_f429zi]
extends = embedded, arduino, deployment
platform = ststm32
board = nucleo_f429zi
framework = arduino
upload_protocol = stlink

[env:nucleo_f429zi-debug]
extends = embedded, arduino
platform = ststm32
build_flags =
    ${env.build_flags}
    -D DEBUG_SPINE
    -D DEBUG_KASKAS
    -u_printf_float
    -u_scanf_float
    -DPIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
board = nucleo_f429zi
framework = arduino
upload_protocol = stlink
debug_tool = stlink

[env:debug]
platform = native
build_flags =
    ${env.build_flags}
    -D NATIVE
    -D DEBUG_KASKAS
    -D DEBUG_SPINE
debug_build_flags =
    ${env.debug_build_flags}
    -D NATIVE
build_type = debug
lib_compat_mode = off
test_ignore = test_embedded
debug_init_break = tbreak setup

[unittest]
build_flags =
    ${env.build_flags}
    -D NATIVE
    -D UNITTEST
build_src_flags =
    ${env.build_src_flags}
debug_build_flags =
    ${env.debug_build_flags}
    -D NATIVE
    -D UNITTEST
    -D_GLIBCXX_DEBUG
    -D_GLIBCXX_ASSERTIONS
    -D FAKEIT_ASSERT_ON_UNEXPECTED_METHOD_INVOCATION
    -ggdb3
    -Og
    -fno-omit-frame-pointer
    -fno-optimize-sibling-calls
    -fsanitize=address
    -fstack-protector
    -fstack-usage
lib_compat_mode = off
test_ignore = test_embedded
test_build_src = yes

[env:unittest]
platform = native
extends = unittest

[env:unittest-debug]
platform = native
extends = unittest
build_type = debug
